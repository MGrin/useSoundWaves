{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["audioCtx","window","useState","isPlaying","setIsPlaying","error","setError","currentSound","setCurrentSound","useEffect","Error","oscillatorRef","useRef","stop","useCallback","play","params","oscillator","Key","frequency","secondary","keyboardKey","useSoundWaves","onMouseDown","onMouseUp","onKeyDown","e","key","onKeyUp","document","addEventListener","removeEventListener","className","notes","name","App","map","note","ReactDOM","render","getElementById"],"mappings":"8OAgBMA,EAAWC,oBAAsB,IAAIA,OAA1BA,kBAAjB,E,EAEsB,WACpB,MAAkCC,oBAAlC,GAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,qBAAnBG,EAAP,KAAcC,EAAd,KACA,EAAwCJ,qBAAjCK,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACR,GACEH,EAAS,IAAII,MAAbJ,oCAFJG,IAMA,IAAME,EAAgBC,mBAEhBC,EAAOC,uBAAY,WACvBV,MACAI,UACIG,EAAJ,UACEA,iBACAA,oBALJ,IASMI,EAAOD,uBACX,YACE,IAGA,GACED,IAGFF,UAAwBX,EAAxBW,mBACAA,eAA6BK,QAA7BL,OACAA,mCACEK,EADFL,UAEEX,EAFFW,aAIAA,kBAA8BX,EAA9BW,aAEAA,kBAEAP,MACAI,QAEF,CAACK,EAtBH,IAyBA,MAAO,CACLV,UADK,EAELI,aAFK,EAGLU,WAAYN,EAHP,QAILI,KAJK,EAKLF,KALK,EAMLR,UC5DEa,EAAM,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,YACnC,EAAkCC,IAA1BnB,EAAR,EAAQA,UAAWY,EAAnB,EAAmBA,KAAMF,EAAzB,EAAyBA,KAEnBU,EAAcT,uBAAY,WAC9BC,EAAK,CAAEI,gBACN,CAACJ,EAAMI,IAEJK,EAAYV,uBAAY,WAC5BD,MACC,CAACA,IAwBJ,OAtBAJ,qBAAU,WACR,IAAMgB,EAAY,SAACC,GACZA,EAAoBC,MAAQN,GAC/BE,KAIEK,EAAU,SAACF,GACVA,EAAoBC,MAAQN,GAC/BG,KAOJ,OAHAK,SAASC,iBAAiB,UAAWL,GACrCI,SAASC,iBAAiB,QAASF,GAE5B,WACLC,SAASE,oBAAoB,UAAWN,GACxCI,SAASE,oBAAoB,QAASH,MAEvC,CAACL,EAAaC,EAAWH,IAG1B,yBACEW,UAAS,cAAS7B,EAAY,SAAW,GAAhC,YACPiB,EAAY,YAAc,IAE5BG,YAAaA,EACbC,UAAWA,GAEX,0BAAMQ,UAAU,UAAUX,KAK1BY,EAAQ,CACZ,CACEC,KAAM,KACNf,UAAW,IACXC,WAAW,EACXO,IAAK,KAEP,CACEO,KAAM,sBACNf,UAAW,SACXC,WAAW,EACXO,IAAK,KAEP,CACEO,KAAM,KACNf,UAAW,SACXC,WAAW,EACXO,IAAK,KAEP,CACEO,KAAM,KACNf,UAAW,SACXC,WAAW,EACXO,IAAK,KAEP,CACEO,KAAM,oBACNf,UAAW,SACXC,WAAW,EACXO,IAAK,KAEP,CACEO,KAAM,KACNf,UAAW,SACXC,WAAW,EACXO,IAAK,KAEP,CACEO,KAAM,oBACNf,UAAW,QACXC,WAAW,EACXO,IAAK,KAEP,CACEO,KAAM,KACNf,UAAW,SACXC,WAAW,EACXO,IAAK,KAEP,CACEO,KAAM,KACNf,UAAW,SACXC,WAAW,EACXO,IAAK,MAeMQ,EAXH,WACV,OACE,yBAAKH,UAAU,OACb,yBAAKA,UAAU,YACZC,EAAMG,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,iBAASA,EAAT,CAAehB,YAAagB,EAAKV,IAAKA,IAAKU,EAAKV,aCjH1DW,IAASC,OAAO,kBAAC,EAAD,MAASV,SAASW,eAAe,W","file":"static/js/main.885d8d0d.chunk.js","sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react'\n\ntype SoundParams = {\n  frequency: number\n  type?: OscillatorType\n}\n\ntype UseSoundWavesResult = {\n  isPlaying: boolean\n  currentSound?: number\n  play: (params: SoundParams) => void\n  stop: () => void\n  oscillator?: OscillatorNode\n  error?: Error\n}\n\nconst audioCtx = window.AudioContext ? new window.AudioContext() : undefined\n\nconst useSoundWaves = () => {\n  const [isPlaying, setIsPlaying] = useState(false)\n  const [error, setError] = useState<Error>()\n  const [currentSound, setCurrentSound] = useState()\n\n  useEffect(() => {\n    if (!audioCtx) {\n      setError(new Error('No AudioContext is available.'))\n    }\n  }, [])\n\n  const oscillatorRef = useRef<OscillatorNode>()\n\n  const stop = useCallback(() => {\n    setIsPlaying(false)\n    setCurrentSound(undefined)\n    if (oscillatorRef.current) {\n      oscillatorRef.current.stop()\n      oscillatorRef.current = undefined\n    }\n  }, [])\n\n  const play = useCallback(\n    (params) => {\n      if (!audioCtx) {\n        return\n      }\n      if (isPlaying) {\n        stop()\n      }\n\n      oscillatorRef.current = audioCtx.createOscillator()\n      oscillatorRef.current.type = params.type || 'sine'\n      oscillatorRef.current.frequency.setValueAtTime(\n        params.frequency,\n        audioCtx.currentTime\n      )\n      oscillatorRef.current.connect(audioCtx.destination)\n\n      oscillatorRef.current.start()\n\n      setIsPlaying(true)\n      setCurrentSound(params)\n    },\n    [stop, isPlaying]\n  )\n\n  return {\n    isPlaying,\n    currentSound,\n    oscillator: oscillatorRef.current,\n    play,\n    stop,\n    error\n  } as UseSoundWavesResult\n}\n\nexport default useSoundWaves\n","import React, { useCallback, useEffect } from 'react'\n\nimport useSoundWaves from 'use-sound-waves'\n\ntype KeyProps = {\n  name: string\n  frequency: number\n  keyboardKey: string\n  secondary?: boolean\n}\n\nconst Key = ({ frequency, secondary, keyboardKey }: KeyProps) => {\n  const { isPlaying, play, stop } = useSoundWaves()\n\n  const onMouseDown = useCallback(() => {\n    play({ frequency })\n  }, [play, frequency])\n\n  const onMouseUp = useCallback(() => {\n    stop()\n  }, [stop])\n\n  useEffect(() => {\n    const onKeyDown = (e: Event) => {\n      if ((e as KeyboardEvent).key === keyboardKey) {\n        onMouseDown()\n      }\n    }\n\n    const onKeyUp = (e: Event) => {\n      if ((e as KeyboardEvent).key === keyboardKey) {\n        onMouseUp()\n      }\n    }\n\n    document.addEventListener('keydown', onKeyDown)\n    document.addEventListener('keyup', onKeyUp)\n\n    return () => {\n      document.removeEventListener('keydown', onKeyDown)\n      document.removeEventListener('keyup', onKeyUp)\n    }\n  }, [onMouseDown, onMouseUp, keyboardKey])\n\n  return (\n    <div\n      className={`key ${isPlaying ? 'active' : ''} ${\n        secondary ? 'secondary' : ''\n      }`}\n      onMouseDown={onMouseDown}\n      onMouseUp={onMouseUp}\n    >\n      <span className='button'>{keyboardKey}</span>\n    </div>\n  )\n}\n\nconst notes = [\n  {\n    name: 'A4',\n    frequency: 440,\n    secondary: false,\n    key: 'a'\n  },\n  {\n    name: 'A4A♯4/B♭4',\n    frequency: 466.1638,\n    secondary: true,\n    key: 'w'\n  },\n  {\n    name: 'B4',\n    frequency: 493.8833,\n    secondary: false,\n    key: 's'\n  },\n  {\n    name: 'C5',\n    frequency: 523.2511,\n    secondary: false,\n    key: 'd'\n  },\n  {\n    name: 'C♯5/D♭5',\n    frequency: 554.3653,\n    secondary: true,\n    key: 'e'\n  },\n  {\n    name: 'D5',\n    frequency: 587.3295,\n    secondary: false,\n    key: 'f'\n  },\n  {\n    name: 'D♯5/E♭5',\n    frequency: 622.254,\n    secondary: true,\n    key: 'r'\n  },\n  {\n    name: 'E5',\n    frequency: 659.2551,\n    secondary: false,\n    key: 'g'\n  },\n  {\n    name: 'F5',\n    frequency: 698.4565,\n    secondary: false,\n    key: 'h'\n  }\n]\n\nconst App = () => {\n  return (\n    <div className='app'>\n      <div className='keyboard'>\n        {notes.map((note) => (\n          <Key {...note} keyboardKey={note.key} key={note.key} />\n        ))}\n      </div>\n    </div>\n  )\n}\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}